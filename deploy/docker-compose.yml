version: '3.8'

services:
  # Main OpenManus application
  openmanus:
    build:
      context: .
      dockerfile: Dockerfile.improved
      target: development
    container_name: openmanus-dev
    ports:
      - "8000:8000"  # API server
      - "8080:8080"  # MCP server
      - "3000:3000"  # Frontend dev server
    volumes:
      - .:/app
      - openmanus-workspace:/app/workspace
      - openmanus-logs:/app/logs
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    env_file:
      - .env
    networks:
      - openmanus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: openmanus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - openmanus-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL for persistent data storage
  postgres:
    image: postgres:15-alpine
    container_name: openmanus-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=openmanus
      - POSTGRES_USER=openmanus
      - POSTGRES_PASSWORD=openmanus_dev_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - openmanus-network
    restart: unless-stopped

  # Nginx reverse proxy for development
  nginx:
    image: nginx:alpine
    container_name: openmanus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - openmanus
    networks:
      - openmanus-network
    restart: unless-stopped

  # MCP server for tool management
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.improved
      target: development
    container_name: openmanus-mcp
    ports:
      - "8081:8081"
    volumes:
      - .:/app
    environment:
      - MCP_SERVER_PORT=8081
      - ENVIRONMENT=development
    command: ["python", "run_mcp_server.py"]
    networks:
      - openmanus-network
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

  # Frontend development server (if using React/Vue)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: openmanus-frontend
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    networks:
      - openmanus-network
    restart: unless-stopped

volumes:
  openmanus-workspace:
    driver: local
  openmanus-logs:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local

networks:
  openmanus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

